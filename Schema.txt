CREATE TABLE USER
(
    EMAILID NVARCHAR(20) NOT NULL,
    PASSWORD1 NVARCHAR(15) NOT NULL,
    ROLE NVARCHAR(20) NOT NULL,
    PRIMARY KEY(EMAILID)
);

CREATE TABLE ADMINDETAIL
(
    ADMINID INT(3) auto_increment,
    ADMINNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    primary key(ADMINID)
);
alter table ADMINDETAIL auto_increment = 100;

CREATE table CUSTOMERDETAIL
(
    CUSTOMERID INT(5) AUTO_INCREMENT,
    CUSTOMERNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    ADDRESS NVARCHAR(100) NOT NULL,
    PINCODE int(6) NOT NULL,
    PRIMARY KEY (CUSTOMERID)
);
alter table CUSTOMERDETAIL AUTO_INCREMENT = 10000;
CREATE TABLE MERCHANTDETAIL
(
    MERCHANTID INT(4) auto_increment,
    MERCHANTNAME NVARCHAR(20) NOT NULL,
    EMAIL NVARCHAR(30) NOT NULL UNIQUE,
    ADDRESS NVARCHAR(100) NOT NULL,
    STORENAME NVARCHAR(20),
    MOBILENO NVARCHAR(10) NOT NULL UNIQUE,
    PRIMARY KEY(MERCHANTID),
    CHECK(MERCHANTRATING>0 AND MERCHANTRATING<=5)
);
alter table MERCHANTDETAIL auto_increment = 2000;

CREATE TABLE MERCHANTFEEDBACK
(
    MRID INT(4) auto_increment,
    MERCHANTID INT(4) NOT NULL,
    MERCHANTFEEDBACK NVARCHAR(100),
    primary key(MRID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE
);
alter table MERCHANTFEEDBACK auto_increment = 1000;

CREATE TABLE PRODUCTDETAIL
(
    PRODUCTID INT(6) auto_increment,
    PRODUCTNAME NVARCHAR(20) NOT NULL,
    PRODUCTPRICE INT NOT NULL,
    PRODUCTQUANTITY INT NOT NULL,
    DISCOUNTOFFERED INT NOT NULL,
    PRODUCTCATEGORY NVARCHAR(15) NOT NULL,
    PRODUCTTYPE NVARCHAR(15) NOT NULL,
    PRODUCTBRAND NVARCHAR(15) NOT NULL,
    PRODUCTMODEL NVARCHAR(15) NOT NULL,
    PRODUCTFEATURES NVARCHAR(100) NOT NULL,
    primary key (PRODUCTID)
);
alter table PRODUCTDETAIL auto_increment = 300000;

CREATE TABLE PRODUCTFEEDBACK
(
    PFID INT(4) AUTO_INCREMENT,
    PRODUCTID INT(6) NOT NULL,
    PRODUCTFEEDBACK NVARCHAR(100),
    PRIMARY KEY(PFID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);
alter table PRODUCTFEEDBACK auto_increment = 100;

CREATE TABLE DUMMYORDER
(
    ORDERID INT(7) AUTO_INCREMENT,
    PRIMARY KEY(ORDERID)
);
alter table DUMMYORDER auto_increment = 1000000;

CREATE TABLE ORDERDETAIL
(
    ORDERID INT(7) NOT NULL,
    ORDERDATE DATE NOT NULL,
    CUSTOMERID INT(5) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTID INT(6) NOT NULL,
    PRODUCTQUANTITY INT NOT NULL,
    TOTALPRICE INT NOT NULL,
    FINALPRICE INT NOT NULL,
    FOREIGN KEY(ORDERID) REFERENCES DUMMYORDER(ORDERID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID) ON DELETE CASCADE,
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);

CREATE TABLE WISHLIST
(
    CUSTOMERID INT(5) NOT NULL, 
    PRODUCTID INT(6) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTPRICE INT NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);

CREATE TABLE PROMO
(
    PROMOCODE NVARCHAR(15),
    DISCOUNTOFFERED INT(2) NOT NULL,
    PROMOVALIDITY DATE,
    SOFTDELETE NVARCHAR(8) NOT NULL,
    primary key(promocode),
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);

CREATE TABLE CART
(
    CUSTOMERID INT(5) NOT NULL, 
    PRODUCTID INT(6) NOT NULL,
    MERCHANTID INT(4) NOT NULL,
    PRODUCTQUANTITY INT NOT NULL,
    PRODUCTPRICE INT NOT NULL,
    PROMOCODE NVARCHAR(15) NOT NULL,
    SOFTDELETE NVARCHAR(8) NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
    FOREIGN KEY(PROMOCODE) REFERENCES PROMO(PROMOCODE) ON DELETE CASCADE,
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);

CREATE TABLE OFFER
(
    OFFERID INT(4) auto_increment,
    MERCHANTID INT(4), 
    OFFERDESCRIPTION NVARCHAR(100),
    PRODUCTID INT(6), 
    OFFERSTARTDATE DATE NOT NULL,
    OFFERENDDATE DATE NOT NULL,
    DISCOUNTOFFERED INT NOT NULL,
    SOFTDELETE NVARCHAR(8) NOT NULL,
    PRIMARY KEY(OFFERID),
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
    CHECK(SOFTDELETE='I' OR SOFTDELETE='A')
);
alter table OFFER auto_increment = 20000;

CREATE TABLE RETURNREQUEST
(
    CUSTOMERID INT(5) NOT NULL,
    PRODUCTID INT(6) NOT NULL,
    ORDERID INT(7) NOT NULL,
    REFUNDAMOUNT INT NOT NULL, 
    RETURNSTATUS NVARCHAR(10) NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERDETAIL(CUSTOMERID) ON DELETE CASCADE,
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE,
    FOREIGN KEY(ORDERID) REFERENCES DUMMYORDER(ORDERID) ON DELETE CASCADE,
    CHECK(RETURNSTATUS='APPLIED' OR RETURNSTATUS='APPROVED' OR RETURNSTATUS='REJECTED')
);

CREATE TABLE MERCHANTPRODUCT

(
    MERCHANTID INT(4),
    PRODUCTID INT(6),
    FOREIGN KEY(MERCHANTID) REFERENCES MERCHANTDETAIL(MERCHANTID) ON DELETE CASCADE,
    FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTDETAIL(PRODUCTID) ON DELETE CASCADE
);


CREATE TABLE EMAIL
(
    SENDER NVARCHAR(20) NOT NULL,
    RECEIVER NVARCHAR(20) NOT NULL,
    SUBJECT1 NVARCHAR(50),
    BODY NVARCHAR(500)
);





Drop table email;
drop table users;


















